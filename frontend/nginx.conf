server {
    listen 3001;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # Enable CORS 
    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';

    # Security Group: Allowing unsafe files and scripts
    # WARNING: 'unsafe-eval' and 'unsafe-inline' reduce security. Only use if required for WebAssembly, dynamic scripts, or specific libraries.
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: blob:; script-src 'self' 'unsafe-eval' 'unsafe-inline' blob:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' blob:;";

    # Gzip Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_min_length 256;
    gzip_vary on;

    # Cache Control for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|pdf)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    location / {
        try_files $uri /index.html;
    }

    location /portfolio-backend/ {
        proxy_pass http://backend:3000/;
    }

     # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}


# server {
#     listen 3001;
#     server_name localhost;

#     root /usr/share/nginx/html;
#     index index.html;
 
#     location = /healthz {
#         add_header Content-Type text/plain;
#         return 200 'OK';
#     }

#     location / {
#         try_files $uri /index.html;
#     }
    
#     location /portfolio-backend/ {
#         proxy_pass http://backend:3000/;
   